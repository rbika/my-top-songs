---
AWSTemplateFormatVersion: "2010-09-09"
Description: Static website hosting with S3 and CloudFront

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: mytopsongs.site

  ReadPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          -
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Sub arn:aws:s3:::${S3Bucket}/*
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref S3Bucket

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          ViewerProtocolPolicy: 'redirect-to-https'
          Compress: true
          DefaultTTL: 3600
          MaxTTL: 86400
          MinTTL: 60
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
          TargetOriginId: s3origin
        CustomErrorResponses:
          -
            ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
          -
            ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
        DefaultRootObject: /index.html
        Enabled: true
        Origins:
          -
            DomainName: !GetAtt S3Bucket.DomainName
            Id: s3origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        PriceClass: PriceClass_100

  PublishUser:
    Type: AWS::IAM::User
    Properties:
      Policies:
        -
          PolicyName: !Sub publish-to-${S3Bucket}
          PolicyDocument:
            Statement:
              -
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${S3Bucket}
                  - !Sub arn:aws:s3:::${S3Bucket}/*

  PublishCredentials:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref PublishUser

Outputs:
  AccessKeyId:
    Description: S3 Access Key
    Value: !Ref PublishCredentials

  AccessKeySecret:
    Description: S3 Secret Key
    Value: !GetAtt PublishCredentials.SecretAccessKey
